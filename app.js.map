{"version":3,"file":"app.js","sources":["webpack:///._src_app.tsx","webpack:///._src_app.scss","webpack:///./src/app.tsx?574c","webpack:///._src_utils_log.ts","webpack:///._src_utils_polyfill.ts"],"sourcesContent":["/*\r\n * @Description: enter your description\r\n * @Date: 2021-09-17 10:01:10\r\n * @LastEditTime: 2021-09-17 14:53:00\r\n */\r\nimport { Component } from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport '@/utils/polyfill';\r\nimport { ApiStore } from './store/index';\r\nimport './app.scss';\r\nimport WX from './utils/WX';\r\nimport { getPlatformInfo, getStorage } from './utils/tools';\r\n// import { storageUtil } from './utils/storage';\r\nimport { track } from './utils/track';\r\nimport Report from './utils/log';\r\n// import { configure } from 'mobx';\r\n// https://zh.mobx.js.org/configuration.html#代码lint选项\r\n// mobx 配置\r\n// configure({\r\n//   useProxies: 'ifavailable', // (实验阶段): 如果环境支持则启用 Proxy，否则 降级到non-proxy替代方案。这个模式的优势是:MobX将对不能在ES5环境中使用的API以及语言特性发出警告，触发ES5标准限制时抛出错误。\r\n// });\r\n\r\nlet env = wx.getAccountInfoSync().miniProgram?.envVersion;\r\nif (!env) env = 'release'; // 兼容处理一下 envVersion 是高版本才有的\r\nconsole.report = () => {}; // 兼容一下\r\n// 开启日志系统 'release', 'trial'\r\nif (!['develop'].includes(env)) {\r\n  const report = new Report(env);\r\n  console.error = report.error();\r\n  // console.report = report.log();\r\n}\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    try {\r\n      const account = getStorage('account');\r\n      console.log('account_id', account?.id);\r\n      if (account) {\r\n        ApiStore.user.setAccount(account);\r\n        track.initEvent(); // 初始化埋点\r\n      }\r\n    } catch (error) {\r\n      console.error('didmount getuserinfo error', error);\r\n    }\r\n  }\r\n  onLaunch() {\r\n    WX.checkUpdate();\r\n    this.clearCache();\r\n    const platform = getPlatformInfo();\r\n    wx.platform = platform;\r\n    wx.getPlatform = () => {\r\n      return wx.platform || getPlatformInfo;\r\n    };\r\n    // storageUtil.init();\r\n  }\r\n  componentDidShow(e) {\r\n    console.log('componentDidShow', e);\r\n    // WX.checkUpdate();\r\n  }\r\n\r\n  componentDidHide() {\r\n    // track.getTorDataService() && track.destroy();\r\n  }\r\n\r\n  componentDidCatchError() {}\r\n\r\n  /** 重新打开清除不必要的缓存 */\r\n  clearCache() {\r\n    wx.removeStorageSync('float_play'); // TODO 1.3.2版本删除，这里是为了清除原始数据\r\n    wx.removeStorageSync('set_fomate_daily_content');\r\n    wx.removeStorageSync('setWithdrawIng');\r\n    wx.removeStorageSync('setIsSubscribe');\r\n    wx.removeStorageSync('setIsAccess');\r\n    wx.removeStorageSync('setClockMsg'); // TODO 1.3.2版本删除，这里是为了清除原始数据\r\n    wx.removeStorageSync('setPlayRate'); // TODO 1.3.2版本删除，这里是为了清除原始数据\r\n  }\r\n\r\n  // this.props.children 就是要渲染的页面\r\n  render() {\r\n    return <Provider store={ApiStore}>{this.props.children}</Provider>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// extracted by mini-css-extract-plugin","import '@tarojs/plugin-platform-weapp/dist/runtime'\n\nimport { createReactApp, window } from '@tarojs/runtime'\nimport { initPxTransform } from '@tarojs/taro'\nimport component from \"../node_modules/babel-loader/lib/index.js!./app.tsx\"\n\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nvar config = {\"requiredBackgroundModes\":[\"audio\",\"location\"],\"sitemapLocation\":\"sitemap.json\",\"tabBar\":{\"selectedColor\":\"#8C67D6\",\"backgroundColor\":\"#ffffff\",\"color\":\"#777A8B\",\"borderStyle\":\"white\",\"list\":[{\"selectedIconPath\":\"assets/images/home-active.png\",\"pagePath\":\"pages/home/home\",\"text\":\"今日课程\",\"iconPath\":\"assets/images/home.png\"},{\"selectedIconPath\":\"assets/images/lecture-active.png\",\"pagePath\":\"pages/mine-course/mine-course\",\"text\":\"我的课程\",\"iconPath\":\"assets/images/lecture.png\"},{\"selectedIconPath\":\"assets/images/user-active.png\",\"pagePath\":\"pages/personal/personal\",\"text\":\"个人中心\",\"iconPath\":\"assets/images/user.png\"}]},\"window\":{\"backgroundTextStyle\":\"light\",\"navigationBarBackgroundColor\":\"#fff\",\"navigationBarTitleText\":\"梨花听书\",\"navigationBarTextStyle\":\"black\",\"backgroundColor\":\"#f8f8f8\",\"pageOrientation\":\"portrait\"},\"pages\":[\"pages/home/home\",\"pages/mine-course/mine-course\",\"pages/detail/detail\",\"pages/personal/personal\",\"pages/personal/my-notes/my-notes\",\"pages/personal/my-purchased/my-purchased\",\"pages/personal/my-record-score/my-record-score\",\"pages/personal/my-record-overage/my-record-overage\",\"pages/personal/withdrawal/withdrawal\",\"pages/personal/center-credit/center-credit\"],\"subpackages\":[{\"root\":\"pages/exam/\",\"name\":\"exam\",\"pages\":[\"exam\"]},{\"root\":\"pages/h5/\",\"name\":\"h5\",\"pages\":[\"h5\"]},{\"root\":\"pages/channel-plan/\",\"name\":\"channel-plan\",\"pages\":[\"channel-plan\"]},{\"root\":\"pages/activity/\",\"name\":\"activity\",\"pages\":[\"activity\"]}]};\nwindow.__taroAppConfig = config\nvar inst = App(createReactApp(component, React, ReactDOM, config))\n\ninitPxTransform({\n  designWidth: 750,\n  deviceRatio: {\"640\":1.17,\"750\":1,\"828\":0.905}\n})\n","import dateFormat from '@/libs/date-format';\r\n\r\nclass Report {\r\n  logger: WechatMiniprogram.RealtimeLogManager | null = null;\r\n  errFunc = console.error;\r\n  logFunc = console.log;\r\n  env: 'unknow';\r\n  constructor(env) {\r\n    this.env = env;\r\n    if (wx.getRealtimeLogManager) {\r\n      this.logger = wx.getRealtimeLogManager();\r\n      console.log('%c <------日志系统已开启------>', 'background:#2145AB;color:#fff');\r\n    }\r\n  }\r\n  getUserInfo() {\r\n    let userInfo = wx.getStorageSync('account') || {};\r\n    delete userInfo.avatar_url;\r\n    delete userInfo.small_avatar_url;\r\n    delete userInfo.introduction;\r\n    return {\r\n      userInfo,\r\n    };\r\n  }\r\n  getPageInfo() {\r\n    const pages = getCurrentPages();\r\n    const route = pages?.[pages.length - 1];\r\n    return { routerQuery: route?.options, routeUrl: route?.route };\r\n  }\r\n  getPlatform() {\r\n    const platform = wx.getPlatform();\r\n    return {\r\n      platform: {\r\n        SDKVersion: platform.SDKVersion,\r\n        benchmarkLevel: platform.benchmarkLevel,\r\n        brand: platform.brand,\r\n        model: platform.model,\r\n        platform: platform.platform,\r\n        system: platform.system,\r\n        version: platform.version,\r\n      },\r\n    };\r\n  }\r\n  getParams(obj) {\r\n    return {\r\n      createTime: dateFormat(Date.now(), 'yyyy-mm-dd HH:MM:SS'),\r\n      ...this.getPageInfo(),\r\n      ...this.getUserInfo(),\r\n      ...this.getPlatform(),\r\n      ...obj.map((o) => {\r\n        if (o instanceof Error) {\r\n          return {\r\n            message: o?.message,\r\n            stack: o?.stack?.substring(0, 1000), // 最多截取1000长度\r\n          };\r\n        }\r\n        return o;\r\n      }),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 上报\r\n   * @param {Object} params 上报对象\r\n   */\r\n  report(type, params) {\r\n    if (!this.logger) return;\r\n    try {\r\n      if (type === 'log') {\r\n        this.logger.info({ ...this.getParams(params) });\r\n      }\r\n      if (type === 'error') {\r\n        this.logger.error({ ...this.getParams(params) });\r\n      }\r\n      // 添加日志搜索key字段\r\n      if (typeof params[0] === 'string') {\r\n        this.logger.addFilterMsg(`${this.env} ${params[0]}`);\r\n      } else if (params[0] instanceof Error) {\r\n        this.logger.addFilterMsg(`${this.env} ${params[0]?.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.warn('report', error);\r\n    }\r\n  }\r\n  log =\r\n    () =>\r\n    (...arg) => {\r\n      try {\r\n        //判断配置文件是否开启日志调试\r\n        this.logFunc.call(console, ...arg);\r\n        // 如果是正常上报错误信息， 没有report标识的， 为其他插件错误上报信息\r\n        this.report('log', arg);\r\n        console.log('上报info信息', this.getParams(arg));\r\n      } catch (e) {\r\n        console.log('上报info catch错误', this.getParams([{ type: 'info catch error' }, e]));\r\n        this.report('error', [{ type: 'log catch error' }, e]);\r\n      }\r\n    };\r\n  error =\r\n    () =>\r\n    (...arg) => {\r\n      try {\r\n        //判断配置文件是否开启日志调试\r\n        this.errFunc.call(console, ...arg);\r\n        // 如果是正常上报错误信息， 没有report标识的， 为其他插件错误上报信息\r\n        if (arg[1]?.isReport) return console.log('接口已经上报，无需上报', arg);\r\n        this.report('error', arg);\r\n        console.log('上报错误信息', this.getParams(arg));\r\n      } catch (e) {\r\n        console.log('上报catch错误', this.getParams([{ type: 'catch error' }, e]));\r\n        this.report('error', [{ type: 'error catch error' }, e]);\r\n      }\r\n    };\r\n}\r\nexport default Report;\r\n","if (!Object.entries) {\r\n  Object.entries = function (obj) {\r\n    let ownProps = Object.keys(obj),\r\n      i = ownProps.length,\r\n      resArray = new Array(i); // preallocate the Array\r\n    while (i--) resArray[i] = [ownProps[i], obj[ownProps[i]]];\r\n\r\n    return resArray;\r\n  };\r\n}\r\n\r\nif (!Object.hasOwnProperty('getOwnPropertyDescriptors')) {\r\n  Object.defineProperty(Object, 'getOwnPropertyDescriptors', {\r\n    configurable: true,\r\n    writable: true,\r\n    value: function getOwnPropertyDescriptors(object) {\r\n      return Reflect.ownKeys(object).reduce((descriptors, key) => {\r\n        return Object.defineProperty(descriptors, key, {\r\n          configurable: true,\r\n          enumerable: true,\r\n          writable: true,\r\n          value: Object.getOwnPropertyDescriptor(object, key),\r\n        });\r\n      }, {});\r\n    },\r\n  });\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AANA;AACA;AAQA;;;AACA;AACA;AAEA;;;AAEA;AAEA;;;AAEA;AAEA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;AAhDA;AACA;AAkDA;;;;;;;;;;;ACnFA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAKA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AA6EA;AAEA;AAAA;AACA;AADA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAZA;AACA;AA9EA;AA2FA;AAEA;AAAA;AACA;AADA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAbA;AACA;AA3FA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAWA;;;AACA;AACA;AACA;AADA;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AA+BA;;;;;;;;;;;ACjHA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAZA;AAcA;;;;A","sourceRoot":""}