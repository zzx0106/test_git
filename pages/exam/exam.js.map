{"version":3,"file":"pages/exam/exam.js","sources":["webpack:///._src_pages_exam_exam.tsx","webpack:///._src_api_combined_api_combined_api.ts","webpack:///._src_api_week_exam_week_exam.ts","webpack:///._src_components_share-dialog_share-dialog.module.scss","webpack:///._src_components_share-dialog_share-dialog.tsx","webpack:///._src_pages_exam_components_exam-list_exam-list.tsx","webpack:///._src_pages_exam_components_exam-list_index.scss","webpack:///._src_pages_exam_components_lectures_index.scss","webpack:///._src_pages_exam_components_lectures_lectures.tsx","webpack:///._src_pages_exam_components_share_share.tsx","webpack:///._src_pages_exam_exam.scss","webpack:///./src/pages/exam/exam.tsx?d843"],"sourcesContent":["/*\r\n * @Author: linzhihai\r\n * @Date: 2021-08-24 14:34:41\r\n * @LastEditTime: 2021-09-14 10:08:36\r\n * @Description:\r\n */\r\nimport { api_clock_in } from '@/api/clock/clock';\r\nimport { api_combined_api } from '@/api/combined_api/combined_api';\r\nimport { ICombined } from '@/api/combined_api/combined_api.i';\r\nimport { api_week_exam_form, api_week_lecture_info } from '@/api/week_exam/week_exam';\r\nimport { IWeekLectureInfo } from '@/api/week_exam/week_exam.i';\r\nimport Loading from '@/components/loading/loading';\r\nimport Share from '@/pages/detail/components/share/share';\r\nimport { ApiStore } from '@/store';\r\nimport { track } from '@/utils/track';\r\nimport WX from '@/utils/WX';\r\nimport { Button, Form, View } from '@tarojs/components';\r\nimport Taro, { useRouter, useShareAppMessage, useDidShow } from '@tarojs/taro';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport ExamList from './components/exam-list/exam-list';\r\nimport Lectures from './components/lectures/lectures';\r\nimport ExamShare from './components/share/share';\r\n\r\nimport './exam.scss';\r\n\r\nconst ExamPage = () => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [hasAnswer, setHasAnswer] = useState<boolean>(false);\r\n  const [objectId, setObjectId] = useState<number>();\r\n  const [formId, setFormId] = useState<number>();\r\n  const [lectureList, setLectureList] = useState<IWeekLectureInfo.WeekLectureInfoList[]>([]);\r\n  const [bookContent, setBookContent] = useState<IWeekLectureInfo.BookContent>({});\r\n  const [formFields, setFormFields] = useState<ICombined.FormField2[]>([]);\r\n  let [fieldValues, setFieldValues] = useState({});\r\n  const [errorTips, setErrorTips] = useState({});\r\n  const [channelId, setChannelId] = useState<number>();\r\n  const [weekNum, setWeekNum] = useState<number>(0);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n\r\n  useShareAppMessage((res: any) => {\r\n    console.log('useShareAppMessage', res);\r\n\r\n    if (res.target) {\r\n      track.setEvent('lh_exam_sh_ck');\r\n      return res.target.dataset.shareInfo;\r\n    } else {\r\n      return ApiStore.common.defaultShareInfo;\r\n    }\r\n  });\r\n\r\n  useDidShow(() => {\r\n    track.setEvent('lh_exam_show');\r\n  });\r\n\r\n  const route = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (route.params) {\r\n      const { channel_id, week_num } = route.params;\r\n      //week_num === 0是先导课 先导课是没有周测的\r\n      if (channel_id && Number(week_num) >= 1) {\r\n        //获取本周课程列表\r\n        getLectureList(channel_id, week_num);\r\n        setChannelId(Number(channel_id ?? ''));\r\n        setWeekNum(Number(week_num ?? ''));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const getLectureList = async (object_id, week_num) => {\r\n    setObjectId(object_id);\r\n    try {\r\n      const res = await api_week_lecture_info(object_id, week_num);\r\n      if (res) {\r\n        //object_type === 'lecture'为音频课程 === 'form'为表单\r\n        const list = res.week_lecture_info_list.filter((item) => item.object_type === 'lecture');\r\n        //为每个课程加上音频播放状态\r\n        list.forEach((item) => {\r\n          item.playStatus = 'pause';\r\n        });\r\n        console.log('week_lecture_info_list', list);\r\n\r\n        if (list.length > 0) {\r\n          setLectureList([...list]);\r\n        }\r\n        setBookContent(res.book_content);\r\n\r\n        //获取本周小测内容\r\n        const form_id = res.week_lecture_info_list[res.week_lecture_info_list.length - 1].object_id;\r\n        getExamInfo(form_id);\r\n        setFormId(form_id);\r\n      } else {\r\n        console.warn('未获取到周测回顾列表');\r\n      }\r\n    } catch (error) {\r\n      console.error('getLectureList error', error);\r\n    }\r\n  };\r\n\r\n  const getExamInfo = async (form_id) => {\r\n    const account_id = Taro.getStorageSync('account').id;\r\n    try {\r\n      const res = await api_combined_api({\r\n        _input: {\r\n          'form.form_with_fields.get': {\r\n            form_id,\r\n          },\r\n          'form.user_records.list_get': {\r\n            form_id,\r\n            account_id,\r\n          },\r\n        },\r\n      });\r\n      if (res) {\r\n        const form_fields = res['form.form_with_fields.get'].data.form_fields;\r\n\r\n        setFormFields(form_fields);\r\n        setLoading(false);\r\n        //判断是否提交过\r\n        if (res['form.user_records.list_get'].data.records) {\r\n          const field_values = res['form.user_records.list_get'].data.records[0].field_values;\r\n          setFieldValues(field_values);\r\n          setHasAnswer(true);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('getExamInfo error', error);\r\n    }\r\n  };\r\n\r\n  const bindSubmitTest = async (e: any) => {\r\n    //已提交过的直接查看分数\r\n    if (hasAnswer) {\r\n      track.setEvent('lh_exam_vi_s');\r\n      setShowDialog(true);\r\n      return;\r\n    }\r\n    changeTextarea(e);\r\n    const isCheck = check();\r\n    if (!isCheck) {\r\n      Taro.showToast({\r\n        title: '请答完题目再提交测试哦',\r\n        icon: 'none',\r\n      });\r\n      return;\r\n    }\r\n    Taro.showToast({\r\n      title: '提交中...',\r\n      icon: 'loading',\r\n      duration: 3000,\r\n    });\r\n    try {\r\n      const res = await api_week_exam_form(\r\n        {\r\n          record_in: {\r\n            form_id: formId,\r\n            field_values: fieldValues,\r\n          },\r\n        },\r\n        channelId as number\r\n      );\r\n      if (res) {\r\n        getClockIn();\r\n        setShowDialog(true);\r\n        setHasAnswer(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('bindSubmitTest', error);\r\n    }\r\n  };\r\n\r\n  // textarea 校验\r\n  // textarea 的 blur 事件会晚于页面上的 tap 事件，如果需要在 button 的点击事件获取 textarea，可以使用 form 的 bindsubmit。\r\n  const changeTextarea = (e: any) => {\r\n    const { value } = e.detail;\r\n    let field_answer = {};\r\n    for (let key in value) {\r\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\r\n        field_answer[key] = {\r\n          answer: value[key],\r\n        };\r\n      }\r\n    }\r\n    const field_values = {\r\n      ...fieldValues,\r\n      ...field_answer,\r\n    };\r\n    fieldValues = field_values;\r\n    setFieldValues(field_values);\r\n  };\r\n\r\n  //表单组件值变化\r\n  const bindChange = (e) => {\r\n    const value = e.detail.value.trim();\r\n    const { id, field_type } = e.target.dataset.field;\r\n    if (!value) {\r\n      if (fieldValues[id]) {\r\n        delete fieldValues[id];\r\n      }\r\n    } else {\r\n      const field_answer =\r\n        field_type === 'single_choice'\r\n          ? {\r\n              [id]: {\r\n                selected: [value],\r\n              },\r\n            }\r\n          : {\r\n              [id]: {\r\n                answer: value,\r\n              },\r\n            };\r\n      fieldValues = {\r\n        ...fieldValues,\r\n        ...field_answer,\r\n      };\r\n    }\r\n    setFieldValues(fieldValues);\r\n    check(e.target.dataset.field);\r\n  };\r\n\r\n  /**\r\n   * @description: 校验提交是否满足条件\r\n   * @return {*}\r\n   */\r\n  const check = (field?) => {\r\n    let tips = {};\r\n\r\n    const checkValue = (data) => {\r\n      const { id, field_type, validators } = data;\r\n      if (fieldValues[id] === undefined || fieldValues[id].answer === '') {\r\n        tips = {\r\n          ...tips,\r\n          ...{\r\n            [id]: {\r\n              [field_type === 'single_choice' ? 'selected' : 'answer']: field_type === 'single_choice' ? '请选择' : '请输入',\r\n            },\r\n          },\r\n        };\r\n      } else {\r\n        //多行文本输入 要校验值是否合法\r\n        if ((field_type === 'multi_input' || field_type === 'text_area') && Object.keys(validators).length > 0) {\r\n          const val = fieldValues[id].answer;\r\n          const { min_length, max_length } = validators;\r\n          if (val.length < min_length || val.length > max_length) {\r\n            const msg = `请输入${min_length}到${max_length}个字`;\r\n            tips = {\r\n              ...tips,\r\n              ...{\r\n                [id]: {\r\n                  answer: [msg],\r\n                },\r\n              },\r\n            };\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (tips[id]) {\r\n          delete tips[id];\r\n        }\r\n      }\r\n    };\r\n\r\n    if (field) {\r\n      tips = errorTips;\r\n      checkValue(field);\r\n    } else {\r\n      const checkList = formFields.filter(\r\n        (item) => item.field_type === 'single_choice' || item.field_type === 'multi_input' || item.field_type === 'text_area'\r\n      );\r\n      //校验每一项的值是否合法\r\n      checkList.forEach((item) => {\r\n        checkValue(item);\r\n      });\r\n    }\r\n    console.log('tip', tips);\r\n    setErrorTips(tips);\r\n    return Object.keys(tips).length === 0;\r\n  };\r\n\r\n  // 请求每日打卡接口\r\n  const getClockIn = async () => {\r\n    track.setEvent('lh_exam_dot_ck');\r\n    Taro.showLoading();\r\n    try {\r\n      const res = await api_clock_in({\r\n        object_id: `${objectId}`,\r\n        channel_id: Number(channelId),\r\n        object_type: 'form',\r\n      });\r\n    } catch (error) {\r\n      console.error('getClockIn', error);\r\n      WX.Toast('打卡失败');\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <Loading></Loading>\r\n  ) : (\r\n    <>\r\n      <View className=\"test-review-container\">\r\n        <View className=\"week-review-wrapper\">\r\n          <View className=\"header flex\">\r\n            <View className=\"trc-tip\"></View>\r\n            <View className=\"trc-text\">一周学习回顾</View>\r\n          </View>\r\n          <Lectures lectureList={lectureList} bookContent={bookContent}></Lectures>\r\n        </View>\r\n        {/* 一周小测 */}\r\n        <Form onSubmit={bindSubmitTest}>\r\n          <View className=\"week-review-wrapper\">\r\n            <View className=\"header flex\">\r\n              <View className=\"trc-tip\"></View>\r\n              <View className=\"trc-text\">一周小测</View>\r\n            </View>\r\n            <ExamList\r\n              formFields={formFields}\r\n              fieldValues={fieldValues}\r\n              errorTips={errorTips}\r\n              onChange={bindChange}\r\n              hasAnswer={hasAnswer}></ExamList>\r\n          </View>\r\n          <Button hoverClass=\"footer-button-active\" className=\"footer-button\" formType=\"submit\">\r\n            {hasAnswer ? '查看分数' : '提交测试'}\r\n          </Button>\r\n          <View className=\"footer-msg\">关注梨花听书公众号，回复“答案”即可获得周测答案</View>\r\n        </Form>\r\n      </View>\r\n      {/* 分享弹窗 */}\r\n      <ExamShare\r\n        show={showDialog}\r\n        closeEvent={setShowDialog}\r\n        channelId={channelId as number}\r\n        weekNum={weekNum}\r\n        formId={formId as number}></ExamShare>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExamPage;\r\n","/*\r\n * @Author: linzhihai\r\n * @Date: 2021-08-20 16:26:00\r\n * @LastEditTime: 2021-08-25 16:57:24\r\n * @Description:\r\n */\r\n/** 周测内容，待优化 */\r\nimport { url, post } from '@/utils/http';\r\nimport { ICombined } from './combined_api.i';\r\n\r\n/**\r\n * 获取周测内容\r\n * @param {*} params\r\n */\r\nexport function api_combined_api(params) {\r\n  return post<ICombined.Data4>(`${url.gw}/combined_api/combined_api.get`, params);\r\n}\r\n","/*\r\n * @Author: linzhihai\r\n * @Date: 2021-08-20 16:26:00\r\n * @LastEditTime: 2021-08-26 14:44:49\r\n * @Description:周测接口\r\n */\r\n\r\nimport { AxiosRequestConfig, get, url, post, http } from '@/utils/http';\r\nimport { IFormShare, IMinaShare, IWeekLectureInfo } from './week_exam.i';\r\n\r\n/**\r\n * 获取周测页面的本周音频列表\r\n * @param channel_id 专栏id\r\n * @param week_num 第几周\r\n * @returns\r\n */\r\nexport function api_week_lecture_info(channel_id: number, week_num: number) {\r\n  return get<IWeekLectureInfo.Data>(`${url.base}/week_exam.week_lecture_info.get`, {\r\n    channel_id,\r\n    week_num,\r\n  });\r\n}\r\n\r\n/**\r\n * 提交周测内容\r\n * @param {*} params\r\n */\r\nexport function api_week_exam_form(params, channel_id: number) {\r\n  return post(`${url.base}/week_exam.week_exam_form.post?channel_id=${channel_id}`, params);\r\n}\r\n\r\n/**\r\n * @param channel_id 专栏id\r\n * @param week_num 第几周\r\n * @param form_id 表单id\r\n */\r\nexport function api_week_exam_form_share(channel_id: number, week_num: number, form_id: number) {\r\n  return get<IFormShare.Data>(`${url.base}/week_exam.week_exam_form_share.get`, {\r\n    channel_id,\r\n    week_num,\r\n    form_id,\r\n  });\r\n}\r\n\r\nexport function api_week_exam_mina_share(channel_id: number, week_num: number) {\r\n  return get<IMinaShare.Data>(`${url.base}/week_exam.week_exam_mina_share.get`, {\r\n    channel_id,\r\n    week_num,\r\n  });\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"share-dialog-img\":\"share-dialog-img--1gDSG\",\"share-button-wrapper\":\"share-button-wrapper--eV2d3\",\"share-button\":\"share-button--1aPgk\",\"share-button-active\":\"share-button-active--2VqM9\",\"button-item\":\"button-item--3sB1t\",\"actived\":\"actived--D933E\",\"actived-active\":\"actived-active--269JU\",\"icon-weixinfenxiang1x\":\"icon-weixinfenxiang1x--xXzgW\",\"icon-guanbidanchuang1x\":\"icon-guanbidanchuang1x--1JQqY\",\"icon-pengyouquanfenxiang1x\":\"icon-pengyouquanfenxiang1x--3FiFU\",\"share-wrapper\":\"share-wrapper--2wzbH\",\"clock-share-card\":\"clock-share-card--35mLm\",\"light-icon\":\"light-icon--1-iOi\",\"clock-title\":\"clock-title--1nln7\",\"medal-icon\":\"medal-icon--2B6kJ\",\"modal-mask\":\"modal-mask--1gFxz\",\"modal-content\":\"modal-content--18Tnv\",\"main-content\":\"main-content--37FO5\",\"modal-title\":\"modal-title--2zz7y\",\"animal\":\"animal--34h0j\"};","import { ApiStore } from '@/store';\r\nimport { CSSModule } from '@/utils/css-module';\r\nimport { track } from '@/utils/track';\r\nimport WX from '@/utils/WX';\r\nimport { Block, Button, Image, Text, View } from '@tarojs/components';\r\nimport { useState } from 'react';\r\nimport Dialog from '../dialog/dialog';\r\nimport style from './share-dialog.module.scss';\r\n\r\ninterface IShareDialog {\r\n  fr: string;\r\n  randomShareWord?: string;\r\n  value: boolean;\r\n  setValue: Function;\r\n  cardUrl: string;\r\n  shareInfo?: { title: string; path: string; imageUrl: string };\r\n  cardHeight?: number;\r\n  shareText?: string;\r\n}\r\nconst ShareDialog = CSSModule((props: IShareDialog) => {\r\n  const { value, setValue, fr, randomShareWord, cardHeight = 70, shareInfo, cardUrl, shareText } = props;\r\n\r\n  const bindSaveImage = () => {\r\n    track.setEvent(`lh_${fr}_sa_ck`);\r\n    WX.saveImage(cardUrl);\r\n  };\r\n\r\n  return (\r\n    <Dialog value={value} setValue={setValue} backgroundColor=\"transparent\" showClose>\r\n      <View styleName=\"share-wrapper\">\r\n        <View styleName=\"clock-share-card\">\r\n          {fr === 'clock' && (\r\n            <Block>\r\n              <Image styleName=\"light-icon\" src=\"https://static-1253442168.file.myqcloud.com/xupload/20210918_guang.png\"></Image>\r\n              <Image styleName=\"medal-icon\" src=\"https://static-1253442168.file.myqcloud.com/xupload/20210831_xunzhang.png\"></Image>\r\n              <View styleName=\"clock-title\">{randomShareWord}</View>\r\n            </Block>\r\n          )}\r\n          <Image styleName=\"share-dialog-img\" mode=\"heightFix\" src={cardUrl}></Image>\r\n        </View>\r\n        <View styleName=\"share-button-wrapper \" className=\"flex\">\r\n          <View hoverClass=\"share-button-active\" styleName=\"share-button\">\r\n            <Text styleName=\"icon-weixinfenxiang1x\" className=\"icon icon-weixinfenxiang1x\"></Text>\r\n            <Button styleName=\"button-item\" openType=\"share\" data-shareInfo={shareInfo} onClick={() => setValue(false)}>\r\n              {shareText || '转发好友'}\r\n            </Button>\r\n          </View>\r\n          <View hoverClass=\"actived-active\" styleName=\"share-button actived\" onClick={bindSaveImage}>\r\n            <Text styleName=\"icon-pengyouquanfenxiang1x\" className=\"icon icon-pengyouquanfenxiang1x\"></Text>\r\n            <Button styleName=\"button-item\">保存图片</Button>\r\n          </View>\r\n        </View>\r\n        {/* <Text styleName='icon icon-guanbidanchuang1x'></Text> */}\r\n      </View>\r\n    </Dialog>\r\n  );\r\n}, style);\r\nexport default ShareDialog;\r\n","/*\r\n * @Author: linzhihai\r\n * @Date: 2021-08-24 18:19:04\r\n * @LastEditTime: 2021-09-14 09:57:12\r\n * @Description:\r\n */\r\nimport { View, RadioGroup, Label, Radio, ScrollView, Textarea, BaseEventOrig } from '@tarojs/components';\r\nimport Taro from '@tarojs/taro';\r\nimport './index.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { ICombined } from '@/api/combined_api/combined_api.i';\r\nimport { ApiStore } from '@/store';\r\nimport { track } from '@/utils/track';\r\n\r\nexport type ExamListProps = {\r\n  formFields: ICombined.FormField2[];\r\n  fieldValues: object;\r\n  errorTips: object;\r\n  hasAnswer: boolean;\r\n  onChange(element: BaseEventOrig<any>): void;\r\n};\r\n\r\nconst ExamList: React.FC<ExamListProps> = (props) => {\r\n  const { formFields, fieldValues, errorTips, hasAnswer, onChange } = props;\r\n\r\n  const bindChange = (e: BaseEventOrig<any>) => {\r\n    track.setEvent('lh_exam_ra_ck');\r\n    onChange(e);\r\n  };\r\n\r\n  return (\r\n    <View className=\"exam\">\r\n      {formFields.length > 0 &&\r\n        formFields.map((field, index) => {\r\n          return (\r\n            (field.field_type === 'single_choice' || field.field_type === 'multi_input' || field.field_type === 'text_area') && (\r\n              <View className=\"exam-box\" key={index}>\r\n                <View className=\"content-title\">{field.field_params.label}</View>\r\n                {field.field_type === 'single_choice' && (\r\n                  <RadioGroup onChange={bindChange} data-field={field}>\r\n                    {field.field_params.data.choices.map((item, i) => {\r\n                      return (\r\n                        <Label className=\"exam-radio\" key={i}>\r\n                          <Radio value={item.value} checked={item.value === fieldValues?.[field.id]?.selected[0]} color=\"\"></Radio>\r\n                          <Label className=\"radio\"></Label>\r\n                          <View\r\n                            className=\"exam-radio-label\"\r\n                            style={'color: ' + (item.value === fieldValues?.[field.id]?.selected[0] ? '#9B6ADA' : '#777A8B')}>\r\n                            {item.label}\r\n                          </View>\r\n                        </Label>\r\n                      );\r\n                    })}\r\n                  </RadioGroup>\r\n                )}\r\n                <ScrollView className=\"scroll-view-container\" scrollY>\r\n                  {(field.field_type === 'multi_input' || field.field_type === 'text_area') && (\r\n                    <Textarea\r\n                      className=\"textarea\"\r\n                      value={fieldValues[field.id]?.answer}\r\n                      data-field={field}\r\n                      maxlength={1000}\r\n                      onBlur={bindChange}\r\n                      name={`${field.id}`}></Textarea>\r\n                  )}\r\n                </ScrollView>\r\n                {/* 错误信息提示 */}\r\n                <View className=\"error\">\r\n                  {field.field_type === 'single_choice' ? errorTips?.[field.id]?.selected : errorTips?.[field.id]?.answer}\r\n                </View>\r\n                {/* 已提交过的 不可操作 用透明蒙层遮住 */}\r\n                {hasAnswer && (\r\n                  <View>\r\n                    <View className=\"mask\"></View>\r\n                  </View>\r\n                )}\r\n              </View>\r\n            )\r\n          );\r\n        })}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ExamList;\r\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","/*\r\n * @Author: linzhihai\r\n * @Date: 2021-08-24 18:19:04\r\n * @LastEditTime: 2021-08-31 16:54:25\r\n * @Description:\r\n */\r\nimport { View, Text } from '@tarojs/components';\r\nimport React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport Taro from '@tarojs/taro';\r\nimport './index.scss';\r\nimport { api_finish_lecture } from '@/api/clock/clock';\r\nimport { IWeekLectureInfo } from '@/api/week_exam/week_exam.i';\r\nimport { api_lecture_study_dot } from '@/api/study_length/study_length';\r\nimport { ApiStore } from '@/store';\r\nimport { observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\nimport { PlayerStatus } from '@/store/player';\r\nimport { track } from '@/utils/track';\r\n\r\n// const backgroundAudioManager = Taro.getBackgroundAudioManager();\r\nconst icons = {\r\n  loading: 'icon-zhoucejiazai1x',\r\n  pause: 'icon-zhoucebofang1x',\r\n  play: 'icon-zhoucezanting1x',\r\n};\r\n\r\nexport type LecturesProps = {\r\n  lectureList: IWeekLectureInfo.WeekLectureInfoList[];\r\n  bookContent: IWeekLectureInfo.BookContent;\r\n};\r\n\r\nconst Lectures: React.FC<LecturesProps> = observer((props) => {\r\n  const { lectureList, bookContent } = props;\r\n  const [lectures, setLectures] = useState<IWeekLectureInfo.WeekLectureInfoList[]>([]);\r\n  const playIndex = useRef(-1); // 当前播放索引\r\n  const studyDotInterval = useRef<NodeJS.Timer | null>(null);\r\n\r\n  const playInfo = ApiStore.player.playingInfo;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      /** 退出页面时清除定时器 */\r\n      clearInterval(studyDotInterval.current as NodeJS.Timer);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPlayStatus(playInfo.status);\r\n  }, [playInfo.status]);\r\n\r\n  useEffect(() => {\r\n    if (lectureList.length) {\r\n      setLectures([...lectureList]);\r\n    }\r\n  }, [lectureList]);\r\n\r\n  useEffect(() => {\r\n    if (ApiStore.player.playingState === 'ended') {\r\n      playNextLecture(); // 播放下一首\r\n    }\r\n  }, [ApiStore.player.playingState]);\r\n\r\n  /**\r\n   * @description: 点击播放暂停\r\n   * @param {*} e\r\n   * @return {*}\r\n   */\r\n  const bindAudio = (item: IWeekLectureInfo.WeekLectureInfoList) => {\r\n    track.setEvent('lh_exam_au_ck');\r\n    console.log('bindAudio', toJS(playInfo), item);\r\n\r\n    if (playInfo.object_id === item.object_id && ['play', 'loading'].includes(playInfo.status)) {\r\n      ApiStore.player.goPause();\r\n    } else {\r\n      playLecture(item);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 音频播放\r\n   */\r\n  const playLecture = (item: IWeekLectureInfo.WeekLectureInfoList) => {\r\n    const index = lectures.findIndex((lecture) => item.id === lecture.id);\r\n    lectures[index].playStatus = 'loading';\r\n    playIndex.current = index;\r\n    setLectures(lectures);\r\n    const { author, anchor, unread, unlock, object_type, book_id, title, object_id, channel_id } = item;\r\n    const { length, audio } = item.object_info;\r\n    ApiStore.player.setPlayInfo({\r\n      anchor,\r\n      author,\r\n      unlock,\r\n      unread,\r\n      object_type,\r\n      book_id,\r\n      title,\r\n      object_id,\r\n      channel_id,\r\n      duration: length,\r\n      src: audio,\r\n      status: 'pause',\r\n      cover_url: bookContent[book_id].cover_url,\r\n    });\r\n    ApiStore.player.goPlay();\r\n  };\r\n\r\n  const setPlayStatus = (status: PlayerStatus) => {\r\n    console.log('setPlayStatus', status, playIndex.current);\r\n    let lecs = lectures;\r\n    // 第一次进入且在播放中，处理从其他页面播放背景音乐进入情况\r\n    if (status === 'play' && playIndex.current === -1) {\r\n      lecs = lectureList; // 首次进入，该函数与setLectures是异步，所以这样处理\r\n      console.log('lectureslectures', JSON.parse(JSON.stringify(lectures)));\r\n      const index = lecs.findIndex((item) => item.object_id === playInfo.object_id);\r\n      playIndex.current = index > -1 ? index : playIndex.current;\r\n    }\r\n    if (playIndex.current > -1) {\r\n      //清除之前音频状态\r\n      const index = lecs.findIndex((item, i) => item.playStatus !== 'pause' && i !== playIndex.current);\r\n      if (index > -1) {\r\n        lecs[index].playStatus = 'pause';\r\n      }\r\n      //改变当前播放音频状态\r\n      lecs[playIndex.current].playStatus = status;\r\n      setLectures([...lecs]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 结束后播放下一条音频\r\n   */\r\n  const playNextLecture = () => {\r\n    const next = playIndex.current + 1;\r\n    if (next < lectureList.length) {\r\n      const lecture = lectureList[next];\r\n      playLecture(lecture);\r\n    } else {\r\n      //播完所有课程 更改最后一节课状态\r\n      lectures[lectures.length - 1].playStatus = 'pause';\r\n      setLectures([...lectures]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {lectures.map((item, index) => {\r\n        return (\r\n          <View\r\n            key={index}\r\n            className=\"lecture\"\r\n            onClick={() => bindAudio(item)}\r\n            style={{ color: item.playStatus !== 'pause' ? '#9B6ADA' : '#1b1c21' }}>\r\n            <Text className=\"lecture-content-title\">{`第${item.day_num}天：${item.title}`}</Text>\r\n            <Text\r\n              className={`icon ${icons[item.playStatus]} play-icon`}\r\n              style={{ color: item.playStatus !== 'pause' ? '#9B6ADA' : '#1b1c21' }}></Text>\r\n          </View>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Lectures;\r\n","/*\r\n * @Author: linzhihai\r\n * @Date: 2021-08-24 18:19:04\r\n * @LastEditTime: 2021-08-30 16:47:09\r\n * @Description:\r\n */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Taro, { useShareAppMessage } from '@tarojs/taro';\r\nimport { View } from '@tarojs/components';\r\nimport { api_week_exam_form_share, api_week_exam_mina_share } from '@/api/week_exam/week_exam';\r\nimport ShareDialog from '@/components/share-dialog/share-dialog';\r\nimport WX from '@/utils/WX';\r\n\r\nexport type ShareProps = {\r\n  show: boolean;\r\n  channelId: number;\r\n  weekNum: number;\r\n  formId: number;\r\n  closeEvent: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst ExamShare: React.FC<ShareProps> = (props) => {\r\n  const { channelId, weekNum, formId, show, closeEvent } = props;\r\n\r\n  const [cardUrl, setCardUrl] = useState<string>('');\r\n  const [bookUrlList, setBookUrlList] = useState<string[]>([]);\r\n  const [showShareDialog, setShowShareDialog] = useState<boolean>(false);\r\n  const [shareModel, setShareModel] = useState({\r\n    title: '我正在梨花听书学习，本周学完2本书',\r\n    path: '/pages/activity/activity?from=exam',\r\n    imageUrl: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      getShareCard();\r\n    } else {\r\n      setShowShareDialog(false);\r\n    }\r\n  }, [show]);\r\n\r\n  /**\r\n   * @description: 获取邀请卡链接\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const getShareCard = async () => {\r\n    Taro.showLoading();\r\n    //此处请求不用loading 因为本就是一个弹窗\r\n    try {\r\n      const res = await api_week_exam_form_share(channelId, weekNum, formId);\r\n      if (res && res.card_url) {\r\n        setCardUrl(res.card_url);\r\n        setBookUrlList(res.book_url_list);\r\n\r\n        const card = await api_week_exam_mina_share(channelId, weekNum);\r\n        if (card && card.card_url) {\r\n          setShareModel({\r\n            title: '我正在梨花听书学习，本周学完2本书',\r\n            path: `/pages/activity/activity?from=exam`,\r\n            imageUrl: card.card_url,\r\n          });\r\n          setShowShareDialog(true);\r\n        }\r\n        Taro.hideLoading();\r\n      }\r\n    } catch (error) {\r\n      console.error('getShareCard', error);\r\n      WX.Toast(error.msg || '网络异常，请稍后重试');\r\n      Taro.hideLoading();\r\n    }\r\n  };\r\n\r\n  return <ShareDialog value={showShareDialog} setValue={closeEvent} shareInfo={shareModel} cardUrl={cardUrl} fr=\"exam\"></ShareDialog>;\r\n};\r\n\r\nexport default ExamShare;\r\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./exam.tsx\"\nvar config = {\"navigationBarTitleText\":\"每周回顾与测试\"};\n\ncomponent.enableShareAppMessage = true\nvar inst = Page(createPageConfig(component, 'pages/exam/exam', {root:{cn:[]}}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AARA;AAWA;AACA;AADA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAFA;AACA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AAzBA;AAAA;AACA;AADA;AAAA;AAAA;AA0BA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AADA;AACA;AAJA;AAGA;AACA;AAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;AACA;AADA;AAAA;AAAA;AA2BA;AACA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AACA;AADA;AAOA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AAFA;AAVA;AACA;AADA;AAgBA;AACA;AACA;AACA;AAHA;AAhBA;AAAA;AAAA;AAwBA;AACA;AACA;AAFA;AADA;AACA;AAxBA;AAsBA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA;AACA;AADA;AAAA;AAAA;AAqCA;AACA;AAtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAzGA;AAmJA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAnKA;AACA;AACA;AAqKA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAIA;AADA;AAMA;AADA;AAIA;AAIA;AACA;AAAA;AACA;AA1BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AACA;AAmCA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AACA;AAIA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AA7PA;AACA;AACA;AA+PA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AACA;AALA;AAIA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AALA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AALA;AALA;AAYA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAhBA;AATA;AA8BA;AACA;AACA;AACA;AACA;AALA;AA9BA;AAnRA;AACA;AA0TA;;;;;;;;;;;;;ACrVA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;ACjDA;AACA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AAAA;AARA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAPA;AAXA;AADA;AA4BA;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;;;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAHA;AAUA;AAbA;AAgBA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAYA;AAAA;AAAA;AAKA;AACA;AAAA;AADA;AApCA;AA2CA;AAhDA;AAmDA;AACA;AACA;;;;;;;;;;;ACpFA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;;;;AAEA;AACA;AACA;AACA;AAHA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAKA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AANA;AAWA;AAdA;AAiBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAPA;AAAA;AACA;AADA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAnBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;AC5EA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}