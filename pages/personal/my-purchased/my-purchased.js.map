{"version":3,"file":"pages/personal/my-purchased/my-purchased.js","sources":["webpack:///._src_pages_personal_my-purchased_my-purchased.tsx","webpack:///._src_pages_personal_my-purchased_my-purchased.module.scss","webpack:///./src/pages/personal/my-purchased/my-purchased.tsx?02a6"],"sourcesContent":["/*\r\n * @Description: 个人中心-我的课程\r\n * @Date: 2021-08-25 10:14:08\r\n * @LastEditTime: 2021-09-15 17:40:00\r\n */\r\n\r\nimport { Block, View, Image } from '@tarojs/components';\r\nimport Taro from '@tarojs/taro';\r\nimport Loading from '@/components/loading/loading';\r\nimport Empty from '@/components/empty/empty';\r\nimport style from './my-purchased.module.scss';\r\nimport { api_bought_list } from '@/api/personal_center/personal_center';\r\nimport { IMyPurchased } from '@/api/personal_center/personal_center.i';\r\nimport { timeStream } from '@/utils/tools';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst MyPurchased = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [bought_channel_list, setBought_channel_list] = useState<IMyPurchased.BoughtChannelList[]>([]);\r\n\r\n  useEffect(() => {\r\n    getBoughtList();\r\n  }, []);\r\n\r\n  const getBoughtList = async () => {\r\n    try {\r\n      const res = await api_bought_list();\r\n      setBought_channel_list(res.bought_channel_list);\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const bindRoute = (channel_id: number) => {\r\n    Taro.switchTab({\r\n      url: `/pages/mine-course/mine-course`,\r\n    });\r\n  };\r\n  return loading ? (\r\n    <Loading />\r\n  ) : (\r\n    <>\r\n      <View className={style.purchased_container}>\r\n        {bought_channel_list.map((item, index) => {\r\n          return (\r\n            <View className={style.item_wrapper} key={index} onClick={() => bindRoute(item.channel_id)}>\r\n              <Image className={style.item_icon} mode=\"widthFix\" src={item.book_url}></Image>\r\n              <View>\r\n                <View className={style.title}>{item.name}</View>\r\n                <View className={style.sub_title}>{'已学习：' + item.studied_day + '/' + item.day_sum + '天'}</View>\r\n                <View className={style.date}>{timeStream(item.create_ts * 1000, 'CN_YMD')}</View>\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n      {!bought_channel_list.length && <Empty />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPurchased;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"purchased_container\":\"purchased_container--3zf8M\",\"item_wrapper\":\"item_wrapper--3529p\",\"item_icon\":\"item_icon--3IyMO\",\"title\":\"title--3j8YU\",\"sub_title\":\"sub_title--1Mqr1\",\"date\":\"date--1M5Xx\"};","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js!./my-purchased.tsx\"\nvar config = {\"navigationBarTitleText\":\"我的课程\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/personal/my-purchased/my-purchased', {root:{cn:[]}}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAEA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AADA;AADA;AACA;AAIA;AAGA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAFA;AAFA;AADA;AADA;AA3BA;AACA;AA8CA;;;;;;;;;;;;AC/DA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}